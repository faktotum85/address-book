// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DataForm renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <DataForm
    buttonText=""
    config={Object {}}
    data={Object {}}
    handleInputChange={[Function]}
    handleSubmit={[Function]}
    title={undefined}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        null,
        <form
          className="Form"
          onSubmit={[Function]}
        >
          <div
            className="formFields"
          />
          <button
            type="submit"
          >
            
          </button>
        </form>,
      ],
    },
    "ref": null,
    "rendered": Array [
      null,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="formFields"
            />,
            <button
              type="submit"
            >
              
            </button>,
          ],
          "className": "Form",
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [],
              "className": "formFields",
            },
            "ref": null,
            "rendered": Array [],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "",
              "type": "submit",
            },
            "ref": null,
            "rendered": "",
            "type": "button",
          },
        ],
        "type": "form",
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          null,
          <form
            className="Form"
            onSubmit={[Function]}
          >
            <div
              className="formFields"
            />
            <button
              type="submit"
            >
              
            </button>
          </form>,
        ],
      },
      "ref": null,
      "rendered": Array [
        null,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="formFields"
              />,
              <button
                type="submit"
              >
                
              </button>,
            ],
            "className": "Form",
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [],
                "className": "formFields",
              },
              "ref": null,
              "rendered": Array [],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "",
                "type": "submit",
              },
              "ref": null,
              "rendered": "",
              "type": "button",
            },
          ],
          "type": "form",
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
